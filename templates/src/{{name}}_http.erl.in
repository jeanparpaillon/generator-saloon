-module({{name}}_http).

-include("{{name}}_log.hrl").

%%% Cowboy REST callbacks
-export([
	 init/2,
	 allowed_methods/2,
	 content_types_accepted/2,
	 content_types_provided/2,
	 resource_exists/2,
	 allow_missing_post/2,
	 to_json/2,
	 from_json/2,
	 is_authorized/2
	]).

-type section() :: auth | undefined.

-record(state, {
	  section   :: section()
	 }).
-type state() :: #state{}.

%%%
%%% Cowboy callbacks
%%%
-spec init(cowboy_req:req(), section()) -> {cowboy_rest, cowboy_req:req(), error | state()}.
init(Req, Section) ->
    {cowboy_rest, Req, #state{section=Section}}.


allowed_methods(Req, State) ->
    {[<<"GET">>, <<"HEAD">>, <<"POST">>, <<"OPTIONS">>], Req, State}.


content_types_accepted(Req, State) ->
    {[
      {{curlyOpen}}<<"application">>, <<"json">>, '*'}, from_json}
     ], Req, State}.


content_types_provided(Req, State) ->
    {[
      {{curlyOpen}}<<"application">>, <<"json">>, '*'}, to_json}
     ], Req, State}.


is_authorized(Req, State) ->
    {true, Req, State}.


resource_exists(Req, #state{section=auth}=S) ->
    {true, Req, S};
resource_exists(Req, #state{section=undefined}=S) ->
    {false, Req, S}.


allow_missing_post(Req, State) ->
    {false, Req, State}.


to_json(Req, S) ->
    {jsx:encode({}), Req, S}.


from_json(Req, S) ->
    {true, Req, S}.
